<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

    <!--
        Process @PersistenceContext to inject entity manager factory

        http://static.springframework.org/spring/docs/2.1.x/reference/orm.html#orm-jpa-straight
        http://static.springframework.org/spring/docs/2.1.x/api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html

        Note: this post processor is implicitly supplied by context:annotation-config or context:component-scan, however,
        we explicitly choose not to use those mechanisms as they encourge dependency lookup (versus the more flexible dependency injection)
    -->
    <bean
        class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

  <bean name="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="location" value="classpath:env/mysql.properties"/>
  </bean>


    <!--
        Create the JPA EntityManagerFactory

        http://static.springframework.org/spring/docs/2.1.x/reference/orm.html#orm-jpa-setup-lcemfb
        http://static.springframework.org/spring/docs/2.1.x/api/org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.html
    -->
    <bean id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="loadTimeWeaver">
            <bean
                class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
        </property>
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <bean
                class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="${database}" />
                <property name="showSql" value="${show_sql}" />
            </bean>
        </property>
    </bean>

    <bean id="dataSource"
        class="com.mysql.jdbc.jdbc2.optional.MysqlDataSource">
        <property name="url" value="${db.url}" />
        <property name="user" value="${db.username}" />
        <property name="password" value="${db.password}" />
    </bean>

    <!--
        Create a transaction manager for JPA operations that exposes JPA transactions to the underlying
        JDBC connection.

        http://static.springframework.org/spring/docs/2.1.x/reference/orm.html#orm-jpa-tx
        http://static.springframework.org/spring/docs/2.1.x/api/org/springframework/orm/jpa/JpaTransactionManager.html
    -->
    <bean id="transactionManager"
        class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory"
            ref="entityManagerFactory" />
    </bean>

    <!--
        process @Transactional to create transaction proxies

        http://static.springframework.org/spring/docs/2.1.x/reference/transaction.html#transaction-declarative-annotations
    -->
    <tx:annotation-driven transaction-manager="transactionManager" />
</beans>
