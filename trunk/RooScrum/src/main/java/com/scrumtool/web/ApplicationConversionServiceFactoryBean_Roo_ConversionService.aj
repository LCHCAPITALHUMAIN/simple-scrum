// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.scrumtool.web;

import com.scrumtool.domain.Actual;
import com.scrumtool.domain.Budget;
import com.scrumtool.domain.DayOff;
import com.scrumtool.domain.DevelopmentTask;
import com.scrumtool.domain.Estimate;
import com.scrumtool.domain.Issue;
import com.scrumtool.domain.Location;
import com.scrumtool.domain.ManagementTask;
import com.scrumtool.domain.ManagementTaskType;
import com.scrumtool.domain.Module;
import com.scrumtool.domain.ProductBacklog;
import com.scrumtool.domain.Profile;
import com.scrumtool.domain.PublicHoliday;
import com.scrumtool.domain.Release;
import com.scrumtool.domain.Remaining;
import com.scrumtool.domain.Sprint;
import com.scrumtool.domain.SprintDay;
import com.scrumtool.domain.Team;
import com.scrumtool.domain.TeamMember;
import com.scrumtool.domain.User;
import java.lang.String;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(new ActualConverter());
        registry.addConverter(new BudgetConverter());
        registry.addConverter(new DayOffConverter());
        registry.addConverter(new DevelopmentTaskConverter());
        registry.addConverter(new EstimateConverter());
        registry.addConverter(new IssueConverter());
        registry.addConverter(new LocationConverter());
        registry.addConverter(new ManagementTaskConverter());
        registry.addConverter(new ManagementTaskTypeConverter());
        registry.addConverter(new ModuleConverter());
        registry.addConverter(new ProductBacklogConverter());
        registry.addConverter(new ProfileConverter());
        registry.addConverter(new PublicHolidayConverter());
        registry.addConverter(new ReleaseConverter());
        registry.addConverter(new RemainingConverter());
        registry.addConverter(new SprintConverter());
        registry.addConverter(new SprintDayConverter());
        registry.addConverter(new TeamConverter());
        registry.addConverter(new TeamMemberConverter());
        registry.addConverter(new UserConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
    static class com.scrumtool.web.ApplicationConversionServiceFactoryBean.ActualConverter implements Converter<Actual, String>  {
        public String convert(Actual actual) {
            return new StringBuilder().append(actual.getDaySpent()).toString();
        }
        
    }
    
    static class com.scrumtool.web.ApplicationConversionServiceFactoryBean.BudgetConverter implements Converter<Budget, String>  {
        public String convert(Budget budget) {
            return new StringBuilder().append(budget.getClarityBLC()).append(" ").append(budget.getClarityBLCDesc()).toString();
        }
        
    }
    
    static class com.scrumtool.web.ApplicationConversionServiceFactoryBean.DayOffConverter implements Converter<DayOff, String>  {
        public String convert(DayOff dayOff) {
            return new StringBuilder().append(dayOff.getDate()).toString();
        }
        
    }
    
    static class com.scrumtool.web.ApplicationConversionServiceFactoryBean.DevelopmentTaskConverter implements Converter<DevelopmentTask, String>  {
        public String convert(DevelopmentTask developmentTask) {
            return new StringBuilder().append(developmentTask.getTitle()).append(" ").append(developmentTask.getDescription()).append(" ").append(developmentTask.getRemark()).toString();
        }
        
    }
    
    static class com.scrumtool.web.ApplicationConversionServiceFactoryBean.EstimateConverter implements Converter<Estimate, String>  {
        public String convert(Estimate estimate) {
            return new StringBuilder().append(estimate.getDate()).append(" ").append(estimate.getValue()).append(" ").append(estimate.getRationales()).append(" ").append(estimate.getComments()).toString();
        }
        
    }
    
    static class com.scrumtool.web.ApplicationConversionServiceFactoryBean.IssueConverter implements Converter<Issue, String>  {
        public String convert(Issue issue) {
            return new StringBuilder().append(issue.getIssueId()).append(" ").append(issue.getDescription()).append(" ").append(issue.getCreator()).append(" ").append(issue.getAssignee()).toString();
        }
        
    }
    
    static class com.scrumtool.web.ApplicationConversionServiceFactoryBean.LocationConverter implements Converter<Location, String>  {
        public String convert(Location location) {
            return new StringBuilder().append(location.getCode()).append(" ").append(location.getName()).toString();
        }
        
    }
    
    static class com.scrumtool.web.ApplicationConversionServiceFactoryBean.ManagementTaskConverter implements Converter<ManagementTask, String>  {
        public String convert(ManagementTask managementTask) {
            return new StringBuilder().append(managementTask.getTitle()).append(" ").append(managementTask.getDescription()).append(" ").append(managementTask.getRemark()).toString();
        }
        
    }
    
    static class com.scrumtool.web.ApplicationConversionServiceFactoryBean.ManagementTaskTypeConverter implements Converter<ManagementTaskType, String>  {
        public String convert(ManagementTaskType managementTaskType) {
            return new StringBuilder().append(managementTaskType.getName()).toString();
        }
        
    }
    
    static class com.scrumtool.web.ApplicationConversionServiceFactoryBean.ModuleConverter implements Converter<Module, String>  {
        public String convert(Module module) {
            return new StringBuilder().append(module.getName()).toString();
        }
        
    }
    
    static class com.scrumtool.web.ApplicationConversionServiceFactoryBean.ProductBacklogConverter implements Converter<ProductBacklog, String>  {
        public String convert(ProductBacklog productBacklog) {
            return new StringBuilder().append(productBacklog.getProductName()).toString();
        }
        
    }
    
    static class com.scrumtool.web.ApplicationConversionServiceFactoryBean.ProfileConverter implements Converter<Profile, String>  {
        public String convert(Profile profile) {
            return new StringBuilder().append(profile.getName()).toString();
        }
        
    }
    
    static class com.scrumtool.web.ApplicationConversionServiceFactoryBean.PublicHolidayConverter implements Converter<PublicHoliday, String>  {
        public String convert(PublicHoliday publicHoliday) {
            return new StringBuilder().append(publicHoliday.getDate()).toString();
        }
        
    }
    
    static class com.scrumtool.web.ApplicationConversionServiceFactoryBean.ReleaseConverter implements Converter<Release, String>  {
        public String convert(Release release) {
            return new StringBuilder().append(release.getApplicationVersionNumber()).append(" ").append(release.getReleaseName()).append(" ").append(release.getDescription()).append(" ").append(release.getContentFreezeDate()).toString();
        }
        
    }
    
    static class com.scrumtool.web.ApplicationConversionServiceFactoryBean.RemainingConverter implements Converter<Remaining, String>  {
        public String convert(Remaining remaining) {
            return new StringBuilder().append(remaining.getRemaining()).toString();
        }
        
    }
    
    static class com.scrumtool.web.ApplicationConversionServiceFactoryBean.SprintConverter implements Converter<Sprint, String>  {
        public String convert(Sprint sprint) {
            return new StringBuilder().append(sprint.getNumber()).append(" ").append(sprint.getTitle()).append(" ").append(sprint.getFromDate()).append(" ").append(sprint.getToDate()).toString();
        }
        
    }
    
    static class com.scrumtool.web.ApplicationConversionServiceFactoryBean.SprintDayConverter implements Converter<SprintDay, String>  {
        public String convert(SprintDay sprintDay) {
            return new StringBuilder().append(sprintDay.getDate()).append(" ").append(sprintDay.getDay()).append(" ").append(sprintDay.getComments()).toString();
        }
        
    }
    
    static class com.scrumtool.web.ApplicationConversionServiceFactoryBean.TeamConverter implements Converter<Team, String>  {
        public String convert(Team team) {
            return new StringBuilder().append(team.getName()).append(" ").append(team.getEstimatedFocusFactor()).toString();
        }
        
    }
    
    static class com.scrumtool.web.ApplicationConversionServiceFactoryBean.TeamMemberConverter implements Converter<TeamMember, String>  {
        public String convert(TeamMember teamMember) {
            return new StringBuilder().append(teamMember.getNonWorkingDaysCount()).append(" ").append(teamMember.getDevelopmentAvailability()).toString();
        }
        
    }
    
    static class com.scrumtool.web.ApplicationConversionServiceFactoryBean.UserConverter implements Converter<User, String>  {
        public String convert(User user) {
            return new StringBuilder().append(user.getUid()).append(" ").append(user.getFirstName()).append(" ").append(user.getLastName()).append(" ").append(user.getEmailAddress()).toString();
        }
        
    }
    
}
